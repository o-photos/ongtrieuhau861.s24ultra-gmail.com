name: o0info
on:
  workflow_dispatch:
    inputs:
      srcremote:
        description: "REMOTE-SOURCE"
        default: ""
        type: choice
        options:
          - "googlephoto-ongtrieuhau861.s24ultra@gmail.com"
      srcpath:
        description: "SOURCE-PATH"
        default: ""
        type: choice
        options:
          - "media/by-month/2024/2024-07"
          - "media/by-month/2024/2024-08"
      destremote:
        description: "REMOTE-DEST"
        default: ""
        type: choice
        options:
          - "googlephoto-ohau26.1031@gmail.com.conf"
jobs:
  o0info:
    runs-on: ubuntu-latest
    steps:
      # Set the organization/repository name to an environment variable
      - name: Set environment variables
        run: |
          echo "REPO_OWNER=${{ github.repository_owner }}" >> $GITHUB_ENV
          echo "REPO_RCLONE_BIN=rclone-bin" >> $GITHUB_ENV
          echo "REPO_RCLONE_CONFIGS=rclone-configs" >> $GITHUB_ENV

      # Check out repo (public)
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Checkout tools repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPO_OWNER }}/${{ env.REPO_RCLONE_BIN }}
          path: ${{ env.REPO_RCLONE_BIN }}
      # Check out repo (private)
      - name: Checkout private tools
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPO_OWNER }}/${{ env.REPO_RCLONE_CONFIGS }}
          token: ${{ secrets.GH_PAT }} # `GH_PAT` is a secret that contains your PAT
          path: ${{ env.REPO_RCLONE_CONFIGS }}

      # Append all rclone config files
      - name: Append all rclone config files
        run: |
          # Change to the directory containing rclone config files
          cd ${{ env.REPO_RCLONE_CONFIGS }}

          # Find all config files and append them into one file
          find . -type f -name "*.conf" -exec cat {} \; > ./rclone.conf

      # List all files and directories
      - name: List all files and directories
        run: |
          mkdir -p ./.artifact
          ls -R > ./.artifact/all_files_and_dirs.txt
          ls -R

      # Install rclone offline
      - name: Install rclone offline
        run: |
          sudo cp ./${{ env.REPO_RCLONE_BIN }}/rclone /usr/bin/
          sudo cp ./${{ env.REPO_RCLONE_BIN }}/rclone.1 /usr/bin/
          sudo chmod +x /usr/bin/rclone
          sudo chmod +x /usr/bin/rclone.1
          rclone version

      # Excute main
      - name: Excute main ${{ github.event.inputs.srcpath }}
        run: |
          rclone copy --auto-confirm --verbose ${{ github.event.inputs.srcremote }}:${{ github.event.inputs.srcpath }} ${{ github.event.inputs.destremote }}:upload --config ./${{ env.REPO_RCLONE_CONFIGS }}/rclone.conf
          rclone check --one-way ${{ github.event.inputs.srcremote }}:${{ github.event.inputs.srcpath }} ${{ github.event.inputs.destremote }}:media/all --config ./${{ env.REPO_RCLONE_CONFIGS }}/rclone.conf

      # Upload Artifact store log
      - name: "Upload Artifact"
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: rclonecloud-artifact-${{ env.NOWDATE }}-${{ github.run_id }}
          path: ./.artifact
          retention-days: 5
